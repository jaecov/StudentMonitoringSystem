//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace StudentMonitoringSystem.Entities
{
    [Serializable]
    public partial class core_student: BaseObject
    {
        #region Primitive Properties
    
        public override int id
        {
            get;
            set;
        }
    
        public  string number
        {
            get;
            set;
        }
    
        public  string firstname
        {
            get;
            set;
        }
    
        public  string middlename
        {
            get;
            set;
        }
    
        public  string lastname
        {
            get;
            set;
        }
    
        public  System.DateTime dateofbirth
        {
            get;
            set;
        }
    
        public  string picture
        {
            get;
            set;
        }
    
        public  int gender_id
        {
            get { return _gender_id; }
            set
            {
                if (_gender_id != value)
                {
                    if (core_gender != null && core_gender.id != value)
                    {
                        core_gender = null;
                    }
                    _gender_id = value;
                }
            }
        }
        private int _gender_id;
    
        public  int civilstatus_id
        {
            get { return _civilstatus_id; }
            set
            {
                if (_civilstatus_id != value)
                {
                    if (core_civilstatus != null && core_civilstatus.id != value)
                    {
                        core_civilstatus = null;
                    }
                    _civilstatus_id = value;
                }
            }
        }
        private int _civilstatus_id;
    
        public  string citizenship
        {
            get;
            set;
        }
    
        public  string street
        {
            get;
            set;
        }
    
        public  int barangay_id
        {
            get { return _barangay_id; }
            set
            {
                if (_barangay_id != value)
                {
                    if (core_barangay != null && core_barangay.id != value)
                    {
                        core_barangay = null;
                    }
                    _barangay_id = value;
                }
            }
        }
        private int _barangay_id;
    
        public  string mothername
        {
            get;
            set;
        }
    
        public  string motheroccupation
        {
            get;
            set;
        }
    
        public  string mothercontactnumber
        {
            get;
            set;
        }
    
        public  string motheraddress
        {
            get;
            set;
        }
    
        public  string fathername
        {
            get;
            set;
        }
    
        public  string fatheroccupation
        {
            get;
            set;
        }
    
        public  string fathercontactnumber
        {
            get;
            set;
        }
    
        public  string fatheraddress
        {
            get;
            set;
        }
    
        public  string note
        {
            get;
            set;
        }
    
        public  int current_enrolledyear_id
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual core_barangay core_barangay
        {
            get { return _core_barangay; }
            set
            {
                if (!ReferenceEquals(_core_barangay, value))
                {
                    var previousValue = _core_barangay;
                    _core_barangay = value;
                    Fixupcore_barangay(previousValue);
                }
            }
        }
        private core_barangay _core_barangay;
    
        public virtual core_civilstatus core_civilstatus
        {
            get { return _core_civilstatus; }
            set
            {
                if (!ReferenceEquals(_core_civilstatus, value))
                {
                    var previousValue = _core_civilstatus;
                    _core_civilstatus = value;
                    Fixupcore_civilstatus(previousValue);
                }
            }
        }
        private core_civilstatus _core_civilstatus;
    
        public virtual ICollection<core_contact> core_contact
        {
            get
            {
                if (_core_contact == null)
                {
                    var newCollection = new FixupCollection<core_contact>();
                    newCollection.CollectionChanged += Fixupcore_contact;
                    _core_contact = newCollection;
                }
                return _core_contact;
            }
            set
            {
                if (!ReferenceEquals(_core_contact, value))
                {
                    var previousValue = _core_contact as FixupCollection<core_contact>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcore_contact;
                    }
                    _core_contact = value;
                    var newValue = value as FixupCollection<core_contact>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcore_contact;
                    }
                }
            }
        }
        private ICollection<core_contact> _core_contact;
    
        public virtual core_gender core_gender
        {
            get { return _core_gender; }
            set
            {
                if (!ReferenceEquals(_core_gender, value))
                {
                    var previousValue = _core_gender;
                    _core_gender = value;
                    Fixupcore_gender(previousValue);
                }
            }
        }
        private core_gender _core_gender;
    
        public virtual ICollection<core_guardian> core_guardian
        {
            get
            {
                if (_core_guardian == null)
                {
                    var newCollection = new FixupCollection<core_guardian>();
                    newCollection.CollectionChanged += Fixupcore_guardian;
                    _core_guardian = newCollection;
                }
                return _core_guardian;
            }
            set
            {
                if (!ReferenceEquals(_core_guardian, value))
                {
                    var previousValue = _core_guardian as FixupCollection<core_guardian>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcore_guardian;
                    }
                    _core_guardian = value;
                    var newValue = value as FixupCollection<core_guardian>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcore_guardian;
                    }
                }
            }
        }
        private ICollection<core_guardian> _core_guardian;
    
        public virtual ICollection<enroll_enrolledyear> enroll_enrolledyear
        {
            get
            {
                if (_enroll_enrolledyear == null)
                {
                    var newCollection = new FixupCollection<enroll_enrolledyear>();
                    newCollection.CollectionChanged += Fixupenroll_enrolledyear;
                    _enroll_enrolledyear = newCollection;
                }
                return _enroll_enrolledyear;
            }
            set
            {
                if (!ReferenceEquals(_enroll_enrolledyear, value))
                {
                    var previousValue = _enroll_enrolledyear as FixupCollection<enroll_enrolledyear>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupenroll_enrolledyear;
                    }
                    _enroll_enrolledyear = value;
                    var newValue = value as FixupCollection<enroll_enrolledyear>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupenroll_enrolledyear;
                    }
                }
            }
        }
        private ICollection<enroll_enrolledyear> _enroll_enrolledyear;

        #endregion
        #region Association Fixup
    
        private void Fixupcore_barangay(core_barangay previousValue)
        {
            if (previousValue != null && previousValue.core_student.Contains(this))
            {
                previousValue.core_student.Remove(this);
            }
    
            if (core_barangay != null)
            {
                if (!core_barangay.core_student.Contains(this))
                {
                    core_barangay.core_student.Add(this);
                }
                if (barangay_id != core_barangay.id)
                {
                    barangay_id = core_barangay.id;
                }
            }
        }
    
        private void Fixupcore_civilstatus(core_civilstatus previousValue)
        {
            if (previousValue != null && previousValue.core_student.Contains(this))
            {
                previousValue.core_student.Remove(this);
            }
    
            if (core_civilstatus != null)
            {
                if (!core_civilstatus.core_student.Contains(this))
                {
                    core_civilstatus.core_student.Add(this);
                }
                if (civilstatus_id != core_civilstatus.id)
                {
                    civilstatus_id = core_civilstatus.id;
                }
            }
        }
    
        private void Fixupcore_gender(core_gender previousValue)
        {
            if (previousValue != null && previousValue.core_student.Contains(this))
            {
                previousValue.core_student.Remove(this);
            }
    
            if (core_gender != null)
            {
                if (!core_gender.core_student.Contains(this))
                {
                    core_gender.core_student.Add(this);
                }
                if (gender_id != core_gender.id)
                {
                    gender_id = core_gender.id;
                }
            }
        }
    
        private void Fixupcore_contact(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (core_contact item in e.NewItems)
                {
                    item.core_student = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (core_contact item in e.OldItems)
                {
                    if (ReferenceEquals(item.core_student, this))
                    {
                        item.core_student = null;
                    }
                }
            }
        }
    
        private void Fixupcore_guardian(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (core_guardian item in e.NewItems)
                {
                    item.core_student = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (core_guardian item in e.OldItems)
                {
                    if (ReferenceEquals(item.core_student, this))
                    {
                        item.core_student = null;
                    }
                }
            }
        }
    
        private void Fixupenroll_enrolledyear(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (enroll_enrolledyear item in e.NewItems)
                {
                    item.core_student = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (enroll_enrolledyear item in e.OldItems)
                {
                    if (ReferenceEquals(item.core_student, this))
                    {
                        item.core_student = null;
                    }
                }
            }
        }

        #endregion
    }
}
