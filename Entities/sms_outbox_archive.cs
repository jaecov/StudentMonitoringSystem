//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace StudentMonitoringSystem.Entities
{
    [Serializable]
    public partial class sms_outbox_archive: BaseObject
    {
        #region Primitive Properties
    
        public virtual int archivedid
        {
            get;
            set;
        }
    
        public virtual System.DateTime archiveddate
        {
            get;
            set;
        }
    
        public virtual int id
        {
            get;
            set;
        }
    
        public virtual string number
        {
            get;
            set;
        }
    
        public virtual string message
        {
            get;
            set;
        }
    
        public virtual int status_id
        {
            get { return _status_id; }
            set
            {
                if (_status_id != value)
                {
                    if (sms_outbox_archive2 != null && sms_outbox_archive2.archivedid != value)
                    {
                        sms_outbox_archive2 = null;
                    }
                    _status_id = value;
                }
            }
        }
        private int _status_id;
    
        public virtual Nullable<int> notification_id
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<sms_outbox_archive> sms_outbox_archive1
        {
            get
            {
                if (_sms_outbox_archive1 == null)
                {
                    var newCollection = new FixupCollection<sms_outbox_archive>();
                    newCollection.CollectionChanged += Fixupsms_outbox_archive1;
                    _sms_outbox_archive1 = newCollection;
                }
                return _sms_outbox_archive1;
            }
            set
            {
                if (!ReferenceEquals(_sms_outbox_archive1, value))
                {
                    var previousValue = _sms_outbox_archive1 as FixupCollection<sms_outbox_archive>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupsms_outbox_archive1;
                    }
                    _sms_outbox_archive1 = value;
                    var newValue = value as FixupCollection<sms_outbox_archive>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupsms_outbox_archive1;
                    }
                }
            }
        }
        private ICollection<sms_outbox_archive> _sms_outbox_archive1;
    
        public virtual sms_outbox_archive sms_outbox_archive2
        {
            get { return _sms_outbox_archive2; }
            set
            {
                if (!ReferenceEquals(_sms_outbox_archive2, value))
                {
                    var previousValue = _sms_outbox_archive2;
                    _sms_outbox_archive2 = value;
                    Fixupsms_outbox_archive2(previousValue);
                }
            }
        }
        private sms_outbox_archive _sms_outbox_archive2;

        #endregion
        #region Association Fixup
    
        private void Fixupsms_outbox_archive2(sms_outbox_archive previousValue)
        {
            if (previousValue != null && previousValue.sms_outbox_archive1.Contains(this))
            {
                previousValue.sms_outbox_archive1.Remove(this);
            }
    
            if (sms_outbox_archive2 != null)
            {
                if (!sms_outbox_archive2.sms_outbox_archive1.Contains(this))
                {
                    sms_outbox_archive2.sms_outbox_archive1.Add(this);
                }
                if (status_id != sms_outbox_archive2.archivedid)
                {
                    status_id = sms_outbox_archive2.archivedid;
                }
            }
        }
    
        private void Fixupsms_outbox_archive1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (sms_outbox_archive item in e.NewItems)
                {
                    item.sms_outbox_archive2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (sms_outbox_archive item in e.OldItems)
                {
                    if (ReferenceEquals(item.sms_outbox_archive2, this))
                    {
                        item.sms_outbox_archive2 = null;
                    }
                }
            }
        }

        #endregion
    }
}
