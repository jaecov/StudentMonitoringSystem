//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace StudentMonitoringSystem.Entities
{
    [Serializable]
    public partial class core_student: BaseObject
    {
        #region Primitive Properties
    
        public virtual int id
        {
            get;
            set;
        }
    
        public virtual string number
        {
            get;
            set;
        }
    
        public virtual string firstname
        {
            get;
            set;
        }
    
        public virtual string middlename
        {
            get;
            set;
        }
    
        public virtual string lastname
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> dateofbirth
        {
            get;
            set;
        }
    
        public virtual int gender_id
        {
            get { return _gender_id; }
            set
            {
                if (_gender_id != value)
                {
                    if (core_gender != null && core_gender.id != value)
                    {
                        core_gender = null;
                    }
                    _gender_id = value;
                }
            }
        }
        private int _gender_id;
    
        public virtual int civilstatus_id
        {
            get { return _civilstatus_id; }
            set
            {
                if (_civilstatus_id != value)
                {
                    if (core_civilstatus != null && core_civilstatus.id != value)
                    {
                        core_civilstatus = null;
                    }
                    _civilstatus_id = value;
                }
            }
        }
        private int _civilstatus_id;
    
        public virtual string citizenship
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual core_civilstatus core_civilstatus
        {
            get { return _core_civilstatus; }
            set
            {
                if (!ReferenceEquals(_core_civilstatus, value))
                {
                    var previousValue = _core_civilstatus;
                    _core_civilstatus = value;
                    Fixupcore_civilstatus(previousValue);
                }
            }
        }
        private core_civilstatus _core_civilstatus;
    
        public virtual core_gender core_gender
        {
            get { return _core_gender; }
            set
            {
                if (!ReferenceEquals(_core_gender, value))
                {
                    var previousValue = _core_gender;
                    _core_gender = value;
                    Fixupcore_gender(previousValue);
                }
            }
        }
        private core_gender _core_gender;

        #endregion
        #region Association Fixup
    
        private void Fixupcore_civilstatus(core_civilstatus previousValue)
        {
            if (previousValue != null && previousValue.core_student.Contains(this))
            {
                previousValue.core_student.Remove(this);
            }
    
            if (core_civilstatus != null)
            {
                if (!core_civilstatus.core_student.Contains(this))
                {
                    core_civilstatus.core_student.Add(this);
                }
                if (civilstatus_id != core_civilstatus.id)
                {
                    civilstatus_id = core_civilstatus.id;
                }
            }
        }
    
        private void Fixupcore_gender(core_gender previousValue)
        {
            if (previousValue != null && previousValue.core_student.Contains(this))
            {
                previousValue.core_student.Remove(this);
            }
    
            if (core_gender != null)
            {
                if (!core_gender.core_student.Contains(this))
                {
                    core_gender.core_student.Add(this);
                }
                if (gender_id != core_gender.id)
                {
                    gender_id = core_gender.id;
                }
            }
        }

        #endregion
    }
}
