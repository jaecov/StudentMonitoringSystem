//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.EntityClient;

namespace StudentMonitoringSystem.Entities
{
    public partial class studentmonitoringEntities : ObjectContext
    {
    	public const string ConnectionString = "name=studentmonitoringEntities";
    	public const string ContainerName = "studentmonitoringEntities";
    
    	#region Constructors
    
    	public studentmonitoringEntities()
    		: base(ConnectionString, ContainerName)
    	{
    		
    		 
    		this.ContextOptions.LazyLoadingEnabled = false;
    		OnContextCreated();
    	}
    
    	public studentmonitoringEntities(string connectionString)
    		: base(connectionString, ContainerName)
    	{
    		
    		 
    		this.ContextOptions.LazyLoadingEnabled = false;
    		OnContextCreated();
    	}
    
    	public studentmonitoringEntities(EntityConnection connection)
    		: base(connection, ContainerName)
    	{
    		
    		 
    		this.ContextOptions.LazyLoadingEnabled = false;
    		OnContextCreated();
    	}
    
    	partial void OnContextCreated();
    
    	#endregion
    
        #region ObjectSet Properties
    
    	public ObjectSet<core_civilstatus> core_civilstatuses
    	{
    		get { return _core_civilstatuses  ?? (_core_civilstatuses = CreateObjectSet<core_civilstatus>("core_civilstatuses")); }
    	}
    	private ObjectSet<core_civilstatus> _core_civilstatuses;
    
    	public ObjectSet<core_gender> core_genders
    	{
    		get { return _core_genders  ?? (_core_genders = CreateObjectSet<core_gender>("core_genders")); }
    	}
    	private ObjectSet<core_gender> _core_genders;
    
    	public ObjectSet<core_student> core_student
    	{
    		get { return _core_student  ?? (_core_student = CreateObjectSet<core_student>("core_student")); }
    	}
    	private ObjectSet<core_student> _core_student;
    
    	public ObjectSet<vstudentinfo> vstudentinfoes
    	{
    		get { return _vstudentinfoes  ?? (_vstudentinfoes = CreateObjectSet<vstudentinfo>("vstudentinfoes")); }
    	}
    	private ObjectSet<vstudentinfo> _vstudentinfoes;

        #endregion

        #region GenericObjectSets
    				
    	public ObjectSet<T> GetObjectSet<T>() where T : class    		
    	{							
    		if(typeof(T) == typeof(core_civilstatus))
    		{
    			return (ObjectSet<T>)(object)core_civilstatuses;
    		}
    								
    		if(typeof(T) == typeof(core_gender))
    		{
    			return (ObjectSet<T>)(object)core_genders;
    		}
    								
    		if(typeof(T) == typeof(core_student))
    		{
    			return (ObjectSet<T>)(object)core_student;
    		}
    								
    		if(typeof(T) == typeof(vstudentinfo))
    		{
    			return (ObjectSet<T>)(object)vstudentinfoes;
    		}
    				
    		return null;
    	}				

        #endregion
    }
}
