//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace StudentMonitoringSystem.Entities
{
    [Serializable]
    public partial class core_city: BaseObject
    {
        #region Primitive Properties
    
        public override int id
        {
            get;
            set;
        }
    
        public  string name
        {
            get;
            set;
        }
    
        public  int province_id
        {
            get { return _province_id; }
            set
            {
                if (_province_id != value)
                {
                    if (core_province != null && core_province.id != value)
                    {
                        core_province = null;
                    }
                    _province_id = value;
                }
            }
        }
        private int _province_id;

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<core_barangay> core_barangay
        {
            get
            {
                if (_core_barangay == null)
                {
                    var newCollection = new FixupCollection<core_barangay>();
                    newCollection.CollectionChanged += Fixupcore_barangay;
                    _core_barangay = newCollection;
                }
                return _core_barangay;
            }
            set
            {
                if (!ReferenceEquals(_core_barangay, value))
                {
                    var previousValue = _core_barangay as FixupCollection<core_barangay>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcore_barangay;
                    }
                    _core_barangay = value;
                    var newValue = value as FixupCollection<core_barangay>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcore_barangay;
                    }
                }
            }
        }
        private ICollection<core_barangay> _core_barangay;
    
        public virtual core_province core_province
        {
            get { return _core_province; }
            set
            {
                if (!ReferenceEquals(_core_province, value))
                {
                    var previousValue = _core_province;
                    _core_province = value;
                    Fixupcore_province(previousValue);
                }
            }
        }
        private core_province _core_province;

        #endregion
        #region Association Fixup
    
        private void Fixupcore_province(core_province previousValue)
        {
            if (previousValue != null && previousValue.core_city.Contains(this))
            {
                previousValue.core_city.Remove(this);
            }
    
            if (core_province != null)
            {
                if (!core_province.core_city.Contains(this))
                {
                    core_province.core_city.Add(this);
                }
                if (province_id != core_province.id)
                {
                    province_id = core_province.id;
                }
            }
        }
    
        private void Fixupcore_barangay(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (core_barangay item in e.NewItems)
                {
                    item.core_city = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (core_barangay item in e.OldItems)
                {
                    if (ReferenceEquals(item.core_city, this))
                    {
                        item.core_city = null;
                    }
                }
            }
        }

        #endregion
    }
}
